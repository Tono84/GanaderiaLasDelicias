@model IEnumerable<GanaderiaLasDelicias.Models.Milking>
@{
    ViewData["Title"] = "Índice de Ordeños";
}

<p>
    <a asp-action="Create" class="btn btn-block bg-gradient-primary">Crear Nuevo</a>
    <button id="generateExcel" class="btn btn-block bg-gradient-success">Generar Reporte de Excel</button>
</p>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Registro de Ordeño</h3>
    </div>
    <div class="card-body table-responsive p-0">
        <table class="table table-hover text-nowrap" id="milkingTable">
            <thead>
                <tr>
                    <th>Fecha de Ordeño</th>
                    <th>Hora de Ordeño</th>
                    <th>Volumen de Leche (L)</th>
                    <th>Contenido de Grasa (%)</th>
                    <th>Contenido de Proteína (%)</th>
                    <th>Contenido de Lactosa (%)</th>
                    <th>Conteo de Células Somáticas</th>
                    <th>Vaca</th>
                    <th>Ordeñador</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.MilkingDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.MilkingTime)</td>
                        <td>@Html.DisplayFor(modelItem => item.MilkVolume)</td>
                        <td>@Html.DisplayFor(modelItem => item.FatContent)</td>
                        <td>@Html.DisplayFor(modelItem => item.ProteinContent)</td>
                        <td>@Html.DisplayFor(modelItem => item.LactoseContent)</td>
                        <td>@Html.DisplayFor(modelItem => item.SomaticCellCount)</td>
                        <td>@Html.DisplayFor(modelItem => item.Cow.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Milker.Name)</td>
                        <td>
                            <div class="btn-group">
                                <a asp-action="Edit" asp-route-id="@item.MilkingId" class="btn btn-success btn-sm">Editar</a>
                                <a asp-action="Details" asp-route-id="@item.MilkingId" class="btn btn-info btn-sm">Detalles</a>
                                <a asp-action="Delete" asp-route-id="@item.MilkingId" class="btn btn-danger btn-sm">Eliminar</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Gráfico de Indicadores del Ordeño</h3>
    </div>
    <div class="card-body">
        <canvas id="milkingChart" width="400" height="200"></canvas>
    </div>
</div>

<!-- Incluir la biblioteca SheetJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('generateExcel').addEventListener('click', () => {
            const table = document.getElementById('milkingTable');
            const wb = XLSX.utils.table_to_book(table, { sheet: "Ordeño" });
            XLSX.writeFile(wb, 'Ordeño.xlsx');
        });
    });
</script>

<!-- Incluir las bibliotecas necesarias -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('generateExcel').addEventListener('click', () => {
            const table = document.getElementById('milkingTable');
            const wb = XLSX.utils.table_to_book(table, { sheet: "Ordeño" });
            XLSX.writeFile(wb, 'Ordeño.xlsx');
        });

        // Preparar los datos para el gráfico
        const labels = [];
        const milkVolumes = [];
        const fatContents = [];
        const proteinContents = [];
        const lactoseContents = [];
        const somaticCellCounts = [];

    @foreach (var item in Model)
    {
        <text>
                    labels.push('@item.MilkingDate.ToShortDateString()');
                    milkVolumes.push(@item.MilkVolume);
                    fatContents.push(@item.FatContent);
                    proteinContents.push(@item.ProteinContent);
                    lactoseContents.push(@item.LactoseContent);
                    somaticCellCounts.push(@item.SomaticCellCount);
        </text>
    }

            // Crear el gráfico
            const ctx = document.getElementById('milkingChart').getContext('2d');
        new Chart(ctx, {
            type: 'line', // Usaremos un gráfico de líneas
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Volumen de Leche (L)',
                        data: milkVolumes,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        fill: false,
                    },
                    {
                        label: 'Contenido de Grasa (%)',
                        data: fatContents,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        fill: false,
                    },
                    {
                        label: 'Contenido de Proteína (%)',
                        data: proteinContents,
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        fill: false,
                    },
                    {
                        label: 'Contenido de Lactosa (%)',
                        data: lactoseContents,
                        borderColor: 'rgba(255, 206, 86, 1)',
                        backgroundColor: 'rgba(255, 206, 86, 0.2)',
                        fill: false,
                    },
                    {
                        label: 'Conteo de Células Somáticas',
                        data: somaticCellCounts,
                        borderColor: 'rgba(153, 102, 255, 1)',
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        fill: false,
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
// Incluye el script de Chart.js
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<h2>Porcentajes de Contenidos en la Leche</h2>

<canvas id="myBarChart" width="400" height="200"></canvas>

<script>
    var ctx = document.getElementById('myBarChart').getContext('2d');

    var data = {
        labels: ['Grasa', 'Proteína', 'Lactosa'], // Etiquetas para las barras
        datasets: [
            {
                label: 'Porcentajes (%)',
                data: [
    @Model.Average(x => x.FatContent ?? 0), // Grasa promedio
    @Model.Average(x => x.ProteinContent ?? 0), // Proteína promedio
    @Model.Average(x => x.LactoseContent ?? 0) // Lactosa promedio
                    ],
                backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],
                borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],
                borderWidth: 1
            }
        ]
    };

    var options = {
        scales: {
            y: {
                beginAtZero: true,
                max: 100 // Esto asegura que el eje Y vaya de 0 a 100, ya que son porcentajes
            }
        }
    };

    var myBarChart = new Chart(ctx, {
        type: 'bar', // Tipo de gráfico: barras individuales
        data: data,
        options: options
    });
</script>
