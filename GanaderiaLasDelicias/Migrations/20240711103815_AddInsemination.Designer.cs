// <auto-generated />
using System;
using GanaderiaLasDelicias.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GanaderiaLasDelicias.Migrations
{
    [DbContext(typeof(SGGContext))]
    [Migration("20240711103815_AddInsemination")]
    partial class AddInsemination
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Bull", b =>
                {
                    b.Property<int>("BullId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BullId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("InseminatedCows")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PregnantCows")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<decimal>("SemenCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BullId");

                    b.ToTable("Bulls");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("AspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NatId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AspNetUserId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.EmployeePayment", b =>
                {
                    b.Property<int>("EmployeePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeePaymentId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("VacationsUsed")
                        .HasColumnType("int");

                    b.HasKey("EmployeePaymentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentId");

                    b.ToTable("EmployeePayment", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.ErrorLog", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorId"), 1L, 1);

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ErrorDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ErrorId")
                        .HasName("PK__ErrorLog__35856A2AB08BABF2");

                    b.HasIndex("AspNetUserId");

                    b.ToTable("ErrorLog", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.EventLog", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("EventId")
                        .HasName("PK__EventLog__7944C810BB19E337");

                    b.HasIndex("AspNetUserId");

                    b.ToTable("EventLog", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Feeding", b =>
                {
                    b.Property<int>("FeedingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedingId"), 1L, 1);

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<int>("GrazingHours")
                        .HasColumnType("int");

                    b.Property<int>("SupplementConsumed")
                        .HasColumnType("int");

                    b.HasKey("FeedingId");

                    b.HasIndex("CowId");

                    b.ToTable("Feedings");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.HealthRecord", b =>
                {
                    b.Property<int>("HealthRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthRecordId"), 1L, 1);

                    b.Property<DateTime?>("CheckupDate")
                        .HasColumnType("date");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DiagnosisDate")
                        .HasColumnType("date");

                    b.Property<string>("Dose")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Frequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrescribedMedication")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StateChangeDate")
                        .HasColumnType("date");

                    b.Property<string>("Treatment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VaccinationDate")
                        .HasColumnType("date");

                    b.HasKey("HealthRecordId");

                    b.HasIndex("CowId");

                    b.ToTable("HealthRecord", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Herd", b =>
                {
                    b.Property<int>("CowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CowId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CowId")
                        .HasName("PK__Herd__E32F87086F973A68");

                    b.ToTable("Herd", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Insemination", b =>
                {
                    b.Property<int>("InseminationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InseminationId"), 1L, 1);

                    b.Property<int>("BullId")
                        .HasColumnType("int");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("InseminationId");

                    b.HasIndex("BullId");

                    b.HasIndex("CowId");

                    b.ToTable("Insemination", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.MedHistory", b =>
                {
                    b.Property<int>("MedHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedHistoryId"), 1L, 1);

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.HasKey("MedHistoryId");

                    b.HasIndex("CowId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("MedHistory", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Milking", b =>
                {
                    b.Property<int>("MilkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MilkingId"), 1L, 1);

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FatContent")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("LactoseContent")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("MilkVolume")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("MilkerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MilkingDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("MilkingTime")
                        .HasColumnType("time");

                    b.Property<decimal?>("ProteinContent")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("SomaticCellCount")
                        .HasColumnType("int");

                    b.HasKey("MilkingId");

                    b.HasIndex("CowId");

                    b.HasIndex("MilkerId");

                    b.ToTable("Milking", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Nutrition", b =>
                {
                    b.Property<int>("NutritionPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionPlanId"), 1L, 1);

                    b.Property<decimal?>("Carbs")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minerals")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Protein")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Supplement")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Vitamins")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Water")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("NutritionPlanId")
                        .HasName("PK__Nutritio__013DA37D62C79602");

                    b.HasIndex("CowId");

                    b.ToTable("Nutrition", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.NutritionHistory", b =>
                {
                    b.Property<int>("NutritionHisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionHisId"), 1L, 1);

                    b.Property<decimal?>("DailyCarbs")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DailyMinerals")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DailyProtein")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DailySupplement")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DailyVitamins")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DailyWater")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("NutritionPlanId")
                        .HasColumnType("int");

                    b.HasKey("NutritionHisId")
                        .HasName("PK__Nutritio__FF29FA84A37B7EF8");

                    b.HasIndex("NutritionPlanId");

                    b.ToTable("NutritionHistory", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Payment", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayId"), 1L, 1);

                    b.Property<decimal>("Ccss")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CCSS");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PayId")
                        .HasName("PK__Payment__EE8FCECFB2A3D467");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Pregnancy", b =>
                {
                    b.Property<int>("PregnancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PregnancyId"), 1L, 1);

                    b.Property<int>("BullId")
                        .HasColumnType("int");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PregDate")
                        .HasColumnType("date");

                    b.HasKey("PregnancyId");

                    b.HasIndex("BullId");

                    b.HasIndex("CowId");

                    b.ToTable("Pregnancy", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.ReprodPregnancy", b =>
                {
                    b.Property<int>("ReprodPregnancyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReprodPregnancyId"), 1L, 1);

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReprodPregnancyId");

                    b.HasIndex("CowId");

                    b.ToTable("ReprodPregnancy", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VacationsUsed")
                        .HasColumnType("int");

                    b.HasKey("SalaryId");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OffDays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShiftType")
                        .HasColumnType("int");

                    b.Property<string>("WorkDays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkHours")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Treatment", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreatmentId"), 1L, 1);

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MedName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TreatmentId");

                    b.ToTable("Treatment", (string)null);
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUserToken", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Employee", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "AspNetUser")
                        .WithMany("Employees")
                        .HasForeignKey("AspNetUserId")
                        .HasConstraintName("FK__Employee__AspNet__09A971A2");

                    b.Navigation("AspNetUser");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.EmployeePayment", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Employee", "Employee")
                        .WithMany("EmployeePayments")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeP__Emplo__0E6E26BF");

                    b.HasOne("GanaderiaLasDelicias.Models.Payment", "Payment")
                        .WithMany("EmployeePayments")
                        .HasForeignKey("PaymentId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeP__Payme__0F624AF8");

                    b.Navigation("Employee");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.ErrorLog", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "AspNetUser")
                        .WithMany("ErrorLogs")
                        .HasForeignKey("AspNetUserId")
                        .IsRequired()
                        .HasConstraintName("FK__ErrorLog__AspNet__236943A5");

                    b.Navigation("AspNetUser");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.EventLog", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.AspNetUser", "AspNetUser")
                        .WithMany("EventLogs")
                        .HasForeignKey("AspNetUserId")
                        .IsRequired()
                        .HasConstraintName("FK__EventLog__AspNet__2645B050");

                    b.Navigation("AspNetUser");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Feeding", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("Feedings")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK_COW");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.HealthRecord", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("HealthRecords")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK__HealthRec__CowId__32AB8735");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Insemination", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Bull", "Bull")
                        .WithMany("Inseminations")
                        .HasForeignKey("BullId")
                        .IsRequired()
                        .HasConstraintName("FK_Insemination_BullId");

                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("Inseminations")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK_Insemination_CowId");

                    b.Navigation("Bull");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.MedHistory", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("MedHistories")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK__MedHistor__CowId__160F4887");

                    b.HasOne("GanaderiaLasDelicias.Models.Treatment", "Treatment")
                        .WithMany("MedHistories")
                        .HasForeignKey("TreatmentId")
                        .IsRequired()
                        .HasConstraintName("FK__MedHistor__Treat__17036CC0");

                    b.Navigation("Cow");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Milking", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("Milkings")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK__Milking__CowId__1F98B2C1");

                    b.HasOne("GanaderiaLasDelicias.Models.Employee", "Milker")
                        .WithMany("Milkings")
                        .HasForeignKey("MilkerId")
                        .HasConstraintName("FK__Milking__MilkerI__208CD6FA");

                    b.Navigation("Cow");

                    b.Navigation("Milker");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Nutrition", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("Nutritions")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__CowId__19DFD96B");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.NutritionHistory", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Nutrition", "NutritionPlan")
                        .WithMany("NutritionHistories")
                        .HasForeignKey("NutritionPlanId")
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__Nutri__1CBC4616");

                    b.Navigation("NutritionPlan");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Pregnancy", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Bull", "Bull")
                        .WithMany("Pregnancies")
                        .HasForeignKey("BullId")
                        .IsRequired()
                        .HasConstraintName("FK__Pregnancy__BullI__367C1819");

                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("Pregnancies")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK__Pregnancy__CowId__3587F3E0");

                    b.Navigation("Bull");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.ReprodPregnancy", b =>
                {
                    b.HasOne("GanaderiaLasDelicias.Models.Herd", "Cow")
                        .WithMany("ReprodPregnancies")
                        .HasForeignKey("CowId")
                        .IsRequired()
                        .HasConstraintName("FK_ReprodPregnancy_CowId");

                    b.Navigation("Cow");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("Employees");

                    b.Navigation("ErrorLogs");

                    b.Navigation("EventLogs");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Bull", b =>
                {
                    b.Navigation("Inseminations");

                    b.Navigation("Pregnancies");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Employee", b =>
                {
                    b.Navigation("EmployeePayments");

                    b.Navigation("Milkings");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Herd", b =>
                {
                    b.Navigation("Feedings");

                    b.Navigation("HealthRecords");

                    b.Navigation("Inseminations");

                    b.Navigation("MedHistories");

                    b.Navigation("Milkings");

                    b.Navigation("Nutritions");

                    b.Navigation("Pregnancies");

                    b.Navigation("ReprodPregnancies");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Nutrition", b =>
                {
                    b.Navigation("NutritionHistories");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Payment", b =>
                {
                    b.Navigation("EmployeePayments");
                });

            modelBuilder.Entity("GanaderiaLasDelicias.Models.Treatment", b =>
                {
                    b.Navigation("MedHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
